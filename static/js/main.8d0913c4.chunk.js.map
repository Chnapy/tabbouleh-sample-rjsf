{"version":3,"sources":["../../tabbouleh/dist/tabbouleh.es5.js","App.tsx","UserAddress.ts","UserData.ts","index.tsx"],"names":["Reflect$1","REFLECT_KEY","commonjsGlobal","globalThis","window","global","self","Reflect","factory","root","this","Function","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","usePolyfill","process","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","length","result","done","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","i","clear","getKey","getValue","getEntry","insert","indexOf","push","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","offset","_byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","isArray","IsConstructor","V","func","f","OrdinaryGetPrototypeOf","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","_extendStatics","d","b","setPrototypeOf","p","_assign","assign","t","s","n","arguments","apply","PropertyEngine","getJSONSchemaType","typeTS","type","Number","String","getJSONPropertySchema","reflectEntity","paramEntity","partialEntity","$ref","typeEntity","getReflectProperties","getMetadata","JSON_PROPERTY","setReflectProperties","properties","defineMetadata","defineReflectProperties","reflectSchema","JSON_SCHEMA","typeSchema","TYPE","fullSchema","msg","name","NotAJsonSchemaError","_super","_this","Error","captureStackTrace","__extends","Util","o","ReferenceEngine","computeJSONReferences","definitions","rootTarget","isRoot","rootTargetSchema","SchemaEngine","getReflectSchema","getReferences","forEach","a","refTarget","targetFn","targetID","generateSchemaID","getComputedJSONSchema","refSchema","generateRef","jsonPropertyKey","defineReflectSchema","addReference","prototypeSource","jsonProperty","classTargetFn","className","reference","referenceMap","getReflectReference","refMapClass","filter","setReflectReference","prototypeTarget","JSON_REFERENCE","schema","classSchema","setReflectSchema","Tabbouleh","generateJSONSchema","generateMultipleJSONSchemas","c","compute","JSONSchema","arg","DecoratorEngine","defineProperties","args","defaultValues","valueSchema","_k","v","JSONString","JSONInteger","JSONObject","classFn","App","id","onChange","console","log","onSubmit","onError","JSON","stringify","UserAddress","required","UserData","title","description","minLength","minimum","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d0913c4.chunk.js","sourcesContent":["var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\nvar Reflect$1;\n\n(function (Reflect) {\n  // Metadata Proposal\n  // https://rbuckton.github.io/reflect-metadata/\n  (function (factory) {\n    var root = typeof commonjsGlobal === \"object\" ? commonjsGlobal : typeof self === \"object\" ? self : typeof this === \"object\" ? this : Function(\"return this;\")();\n    var exporter = makeExporter(Reflect);\n\n    if (typeof root.Reflect === \"undefined\") {\n      root.Reflect = Reflect;\n    } else {\n      exporter = makeExporter(root.Reflect, exporter);\n    }\n\n    factory(exporter);\n\n    function makeExporter(target, previous) {\n      return function (key, value) {\n        if (typeof target[key] !== \"function\") {\n          Object.defineProperty(target, key, {\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n\n        if (previous) previous(key, value);\n      };\n    }\n  })(function (exporter) {\n    var hasOwn = Object.prototype.hasOwnProperty; // feature test for Symbol support\n\n    var supportsSymbol = typeof Symbol === \"function\";\n    var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n    var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n    var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n\n    var supportsProto = {\n      __proto__: []\n    } instanceof Array; // feature test for __proto__ support\n\n    var downLevel = !supportsCreate && !supportsProto;\n    var HashMap = {\n      // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n      create: supportsCreate ? function () {\n        return MakeDictionary(Object.create(null));\n      } : supportsProto ? function () {\n        return MakeDictionary({\n          __proto__: null\n        });\n      } : function () {\n        return MakeDictionary({});\n      },\n      has: downLevel ? function (map, key) {\n        return hasOwn.call(map, key);\n      } : function (map, key) {\n        return key in map;\n      },\n      get: downLevel ? function (map, key) {\n        return hasOwn.call(map, key) ? map[key] : undefined;\n      } : function (map, key) {\n        return map[key];\n      }\n    }; // Load global or shim versions of Map, Set, and WeakMap\n\n    var functionPrototype = Object.getPrototypeOf(Function);\n    var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n\n    var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n\n    var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n\n    var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill(); // [[Metadata]] internal slot\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n\n\n    var Metadata = new _WeakMap();\n    /**\n     * Applies a set of decorators to a property of a target object.\n     * @param decorators An array of decorators.\n     * @param target The target object.\n     * @param propertyKey (Optional) The property key to decorate.\n     * @param attributes (Optional) The property descriptor for the target key.\n     * @remarks Decorators are applied in reverse order.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Example = Reflect.decorate(decoratorsArray, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Object.defineProperty(Example, \"staticMethod\",\n     *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n     *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n     *\n     *     // method (on prototype)\n     *     Object.defineProperty(Example.prototype, \"method\",\n     *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n     *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n     *\n     */\n\n    function decorate(decorators, target, propertyKey, attributes) {\n      if (!IsUndefined(propertyKey)) {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\n        if (IsNull(attributes)) attributes = undefined;\n        propertyKey = ToPropertyKey(propertyKey);\n        return DecorateProperty(decorators, target, propertyKey, attributes);\n      } else {\n        if (!IsArray(decorators)) throw new TypeError();\n        if (!IsConstructor(target)) throw new TypeError();\n        return DecorateConstructor(decorators, target);\n      }\n    }\n\n    exporter(\"decorate\", decorate); // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n\n    /**\n     * A default metadata decorator factory that can be used on a class, class member, or parameter.\n     * @param metadataKey The key for the metadata entry.\n     * @param metadataValue The value for the metadata entry.\n     * @returns A decorator function.\n     * @remarks\n     * If `metadataKey` is already defined for the target and target key, the\n     * metadataValue for that key will be overwritten.\n     * @example\n     *\n     *     // constructor\n     *     @Reflect.metadata(key, value)\n     *     class Example {\n     *     }\n     *\n     *     // property (on constructor, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticProperty;\n     *     }\n     *\n     *     // property (on prototype, TypeScript only)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         property;\n     *     }\n     *\n     *     // method (on constructor)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         static staticMethod() { }\n     *     }\n     *\n     *     // method (on prototype)\n     *     class Example {\n     *         @Reflect.metadata(key, value)\n     *         method() { }\n     *     }\n     *\n     */\n\n    function metadata(metadataKey, metadataValue) {\n      function decorator(target, propertyKey) {\n        if (!IsObject(target)) throw new TypeError();\n        if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\n        OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n      }\n\n      return decorator;\n    }\n\n    exporter(\"metadata\", metadata);\n    /**\n     * Define a unique metadata entry on the target.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param metadataValue A value that contains attached metadata.\n     * @param target The target object on which to define metadata.\n     * @param propertyKey (Optional) The property key for the target.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n     *\n     *     // property (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n     *\n     *     // decorator factory as metadata-producing annotation.\n     *     function MyAnnotation(options): Decorator {\n     *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n     *     }\n     *\n     */\n\n    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n    }\n\n    exporter(\"defineMetadata\", defineMetadata);\n    /**\n     * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function hasMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"hasMetadata\", hasMetadata);\n    /**\n     * Gets a value indicating whether the target object has the provided metadata key defined.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function hasOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"hasOwnMetadata\", hasOwnMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function getMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"getMetadata\", getMetadata);\n    /**\n     * Gets the metadata value for the provided metadata key on the target object.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function getOwnMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n    }\n\n    exporter(\"getOwnMetadata\", getOwnMetadata);\n    /**\n     * Gets the metadata keys defined on the target object or its prototype chain.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n\n    function getMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryMetadataKeys(target, propertyKey);\n    }\n\n    exporter(\"getMetadataKeys\", getMetadataKeys);\n    /**\n     * Gets the unique metadata keys defined on the target object.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns An array of unique metadata keys.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.getOwnMetadataKeys(Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n     *\n     */\n\n    function getOwnMetadataKeys(target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      return OrdinaryOwnMetadataKeys(target, propertyKey);\n    }\n\n    exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n    /**\n     * Deletes the metadata entry from the target object with the provided key.\n     * @param metadataKey A key used to store and retrieve metadata.\n     * @param target The target object on which the metadata is defined.\n     * @param propertyKey (Optional) The property key for the target.\n     * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n     * @example\n     *\n     *     class Example {\n     *         // property declarations are not part of ES6, though they are valid in TypeScript:\n     *         // static staticProperty;\n     *         // property;\n     *\n     *         constructor(p) { }\n     *         static staticMethod(p) { }\n     *         method(p) { }\n     *     }\n     *\n     *     // constructor\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n     *\n     *     // property (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n     *\n     *     // property (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n     *\n     *     // method (on constructor)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n     *\n     *     // method (on prototype)\n     *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n     *\n     */\n\n    function deleteMetadata(metadataKey, target, propertyKey) {\n      if (!IsObject(target)) throw new TypeError();\n      if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\n      var metadataMap = GetOrCreateMetadataMap(target, propertyKey,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return false;\n      if (!metadataMap.delete(metadataKey)) return false;\n      if (metadataMap.size > 0) return true;\n      var targetMetadata = Metadata.get(target);\n      targetMetadata.delete(propertyKey);\n      if (targetMetadata.size > 0) return true;\n      Metadata.delete(target);\n      return true;\n    }\n\n    exporter(\"deleteMetadata\", deleteMetadata);\n\n    function DecorateConstructor(decorators, target) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target);\n\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsConstructor(decorated)) throw new TypeError();\n          target = decorated;\n        }\n      }\n\n      return target;\n    }\n\n    function DecorateProperty(decorators, target, propertyKey, descriptor) {\n      for (var i = decorators.length - 1; i >= 0; --i) {\n        var decorator = decorators[i];\n        var decorated = decorator(target, propertyKey, descriptor);\n\n        if (!IsUndefined(decorated) && !IsNull(decorated)) {\n          if (!IsObject(decorated)) throw new TypeError();\n          descriptor = decorated;\n        }\n      }\n\n      return descriptor;\n    }\n\n    function GetOrCreateMetadataMap(O, P, Create) {\n      var targetMetadata = Metadata.get(O);\n\n      if (IsUndefined(targetMetadata)) {\n        if (!Create) return undefined;\n        targetMetadata = new _Map();\n        Metadata.set(O, targetMetadata);\n      }\n\n      var metadataMap = targetMetadata.get(P);\n\n      if (IsUndefined(metadataMap)) {\n        if (!Create) return undefined;\n        metadataMap = new _Map();\n        targetMetadata.set(P, metadataMap);\n      }\n\n      return metadataMap;\n    } // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n\n\n    function OrdinaryHasMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return true;\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\n      return false;\n    } // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n\n\n    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return false;\n      return ToBoolean(metadataMap.has(MetadataKey));\n    } // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n\n\n    function OrdinaryGetMetadata(MetadataKey, O, P) {\n      var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n      if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\n      return undefined;\n    } // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n\n\n    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return undefined;\n      return metadataMap.get(MetadataKey);\n    } // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n\n\n    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      true);\n      metadataMap.set(MetadataKey, MetadataValue);\n    } // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n\n\n    function OrdinaryMetadataKeys(O, P) {\n      var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n      var parent = OrdinaryGetPrototypeOf(O);\n      if (parent === null) return ownKeys;\n      var parentKeys = OrdinaryMetadataKeys(parent, P);\n      if (parentKeys.length <= 0) return ownKeys;\n      if (ownKeys.length <= 0) return parentKeys;\n      var set = new _Set();\n      var keys = [];\n\n      for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n        var key = ownKeys_1[_i];\n        var hasKey = set.has(key);\n\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n\n      for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n        var key = parentKeys_1[_a];\n        var hasKey = set.has(key);\n\n        if (!hasKey) {\n          set.add(key);\n          keys.push(key);\n        }\n      }\n\n      return keys;\n    } // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n\n\n    function OrdinaryOwnMetadataKeys(O, P) {\n      var keys = [];\n      var metadataMap = GetOrCreateMetadataMap(O, P,\n      /*Create*/\n      false);\n      if (IsUndefined(metadataMap)) return keys;\n      var keysObj = metadataMap.keys();\n      var iterator = GetIterator(keysObj);\n      var k = 0;\n\n      while (true) {\n        var next = IteratorStep(iterator);\n\n        if (!next) {\n          keys.length = k;\n          return keys;\n        }\n\n        var nextValue = IteratorValue(next);\n\n        try {\n          keys[k] = nextValue;\n        } catch (e) {\n          try {\n            IteratorClose(iterator);\n          } finally {\n            throw e;\n          }\n        }\n\n        k++;\n      }\n    } // 6 ECMAScript Data Typ0es and Values\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n\n\n    function Type(x) {\n      if (x === null) return 1\n      /* Null */\n      ;\n\n      switch (typeof x) {\n        case \"undefined\":\n          return 0\n          /* Undefined */\n          ;\n\n        case \"boolean\":\n          return 2\n          /* Boolean */\n          ;\n\n        case \"string\":\n          return 3\n          /* String */\n          ;\n\n        case \"symbol\":\n          return 4\n          /* Symbol */\n          ;\n\n        case \"number\":\n          return 5\n          /* Number */\n          ;\n\n        case \"object\":\n          return x === null ? 1\n          /* Null */\n          : 6\n          /* Object */\n          ;\n\n        default:\n          return 6\n          /* Object */\n          ;\n      }\n    } // 6.1.1 The Undefined Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n\n\n    function IsUndefined(x) {\n      return x === undefined;\n    } // 6.1.2 The Null Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n\n\n    function IsNull(x) {\n      return x === null;\n    } // 6.1.5 The Symbol Type\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n\n\n    function IsSymbol(x) {\n      return typeof x === \"symbol\";\n    } // 6.1.7 The Object Type\n    // https://tc39.github.io/ecma262/#sec-object-type\n\n\n    function IsObject(x) {\n      return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n    } // 7.1 Type Conversion\n    // https://tc39.github.io/ecma262/#sec-type-conversion\n    // 7.1.1 ToPrimitive(input [, PreferredType])\n    // https://tc39.github.io/ecma262/#sec-toprimitive\n\n\n    function ToPrimitive(input, PreferredType) {\n      switch (Type(input)) {\n        case 0\n        /* Undefined */\n        :\n          return input;\n\n        case 1\n        /* Null */\n        :\n          return input;\n\n        case 2\n        /* Boolean */\n        :\n          return input;\n\n        case 3\n        /* String */\n        :\n          return input;\n\n        case 4\n        /* Symbol */\n        :\n          return input;\n\n        case 5\n        /* Number */\n        :\n          return input;\n      }\n\n      var hint = PreferredType === 3\n      /* String */\n      ? \"string\" : PreferredType === 5\n      /* Number */\n      ? \"number\" : \"default\";\n      var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n\n      if (exoticToPrim !== undefined) {\n        var result = exoticToPrim.call(input, hint);\n        if (IsObject(result)) throw new TypeError();\n        return result;\n      }\n\n      return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n    } // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n\n\n    function OrdinaryToPrimitive(O, hint) {\n      if (hint === \"string\") {\n        var toString_1 = O.toString;\n\n        if (IsCallable(toString_1)) {\n          var result = toString_1.call(O);\n          if (!IsObject(result)) return result;\n        }\n\n        var valueOf = O.valueOf;\n\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n      } else {\n        var valueOf = O.valueOf;\n\n        if (IsCallable(valueOf)) {\n          var result = valueOf.call(O);\n          if (!IsObject(result)) return result;\n        }\n\n        var toString_2 = O.toString;\n\n        if (IsCallable(toString_2)) {\n          var result = toString_2.call(O);\n          if (!IsObject(result)) return result;\n        }\n      }\n\n      throw new TypeError();\n    } // 7.1.2 ToBoolean(argument)\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\n\n\n    function ToBoolean(argument) {\n      return !!argument;\n    } // 7.1.12 ToString(argument)\n    // https://tc39.github.io/ecma262/#sec-tostring\n\n\n    function ToString(argument) {\n      return \"\" + argument;\n    } // 7.1.14 ToPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-topropertykey\n\n\n    function ToPropertyKey(argument) {\n      var key = ToPrimitive(argument, 3\n      /* String */\n      );\n      if (IsSymbol(key)) return key;\n      return ToString(key);\n    } // 7.2 Testing and Comparison Operations\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n    // 7.2.2 IsArray(argument)\n    // https://tc39.github.io/ecma262/#sec-isarray\n\n\n    function IsArray(argument) {\n      return Array.isArray ? Array.isArray(argument) : argument instanceof Object ? argument instanceof Array : Object.prototype.toString.call(argument) === \"[object Array]\";\n    } // 7.2.3 IsCallable(argument)\n    // https://tc39.github.io/ecma262/#sec-iscallable\n\n\n    function IsCallable(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n      return typeof argument === \"function\";\n    } // 7.2.4 IsConstructor(argument)\n    // https://tc39.github.io/ecma262/#sec-isconstructor\n\n\n    function IsConstructor(argument) {\n      // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n      return typeof argument === \"function\";\n    } // 7.2.7 IsPropertyKey(argument)\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\n\n\n    function IsPropertyKey(argument) {\n      switch (Type(argument)) {\n        case 3\n        /* String */\n        :\n          return true;\n\n        case 4\n        /* Symbol */\n        :\n          return true;\n\n        default:\n          return false;\n      }\n    } // 7.3 Operations on Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\n    // 7.3.9 GetMethod(V, P)\n    // https://tc39.github.io/ecma262/#sec-getmethod\n\n\n    function GetMethod(V, P) {\n      var func = V[P];\n      if (func === undefined || func === null) return undefined;\n      if (!IsCallable(func)) throw new TypeError();\n      return func;\n    } // 7.4 Operations on Iterator Objects\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n\n\n    function GetIterator(obj) {\n      var method = GetMethod(obj, iteratorSymbol);\n      if (!IsCallable(method)) throw new TypeError(); // from Call\n\n      var iterator = method.call(obj);\n      if (!IsObject(iterator)) throw new TypeError();\n      return iterator;\n    } // 7.4.4 IteratorValue(iterResult)\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n\n\n    function IteratorValue(iterResult) {\n      return iterResult.value;\n    } // 7.4.5 IteratorStep(iterator)\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\n\n\n    function IteratorStep(iterator) {\n      var result = iterator.next();\n      return result.done ? false : result;\n    } // 7.4.6 IteratorClose(iterator, completion)\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\n\n\n    function IteratorClose(iterator) {\n      var f = iterator[\"return\"];\n      if (f) f.call(iterator);\n    } // 9.1 Ordinary Object Internal Methods and Internal Slots\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n\n\n    function OrdinaryGetPrototypeOf(O) {\n      var proto = Object.getPrototypeOf(O);\n      if (typeof O !== \"function\" || O === functionPrototype) return proto; // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n      // Try to determine the superclass constructor. Compatible implementations\n      // must either set __proto__ on a subclass constructor to the superclass constructor,\n      // or ensure each class has a valid `constructor` property on its prototype that\n      // points back to the constructor.\n      // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n      // This is the case when in ES6 or when using __proto__ in a compatible browser.\n\n      if (proto !== functionPrototype) return proto; // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n\n      var prototype = O.prototype;\n      var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n      if (prototypeProto == null || prototypeProto === Object.prototype) return proto; // If the constructor was not a function, then we cannot determine the heritage.\n\n      var constructor = prototypeProto.constructor;\n      if (typeof constructor !== \"function\") return proto; // If we have some kind of self-reference, then we cannot determine the heritage.\n\n      if (constructor === O) return proto; // we have a pretty good guess at the heritage.\n\n      return constructor;\n    } // naive Map shim\n\n\n    function CreateMapPolyfill() {\n      var cacheSentinel = {};\n      var arraySentinel = [];\n\n      var MapIterator =\n      /** @class */\n      function () {\n        function MapIterator(keys, values, selector) {\n          this._index = 0;\n          this._keys = keys;\n          this._values = values;\n          this._selector = selector;\n        }\n\n        MapIterator.prototype[\"@@iterator\"] = function () {\n          return this;\n        };\n\n        MapIterator.prototype[iteratorSymbol] = function () {\n          return this;\n        };\n\n        MapIterator.prototype.next = function () {\n          var index = this._index;\n\n          if (index >= 0 && index < this._keys.length) {\n            var result = this._selector(this._keys[index], this._values[index]);\n\n            if (index + 1 >= this._keys.length) {\n              this._index = -1;\n              this._keys = arraySentinel;\n              this._values = arraySentinel;\n            } else {\n              this._index++;\n            }\n\n            return {\n              value: result,\n              done: false\n            };\n          }\n\n          return {\n            value: undefined,\n            done: true\n          };\n        };\n\n        MapIterator.prototype.throw = function (error) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n\n          throw error;\n        };\n\n        MapIterator.prototype.return = function (value) {\n          if (this._index >= 0) {\n            this._index = -1;\n            this._keys = arraySentinel;\n            this._values = arraySentinel;\n          }\n\n          return {\n            value: value,\n            done: true\n          };\n        };\n\n        return MapIterator;\n      }();\n\n      return (\n        /** @class */\n        function () {\n          function Map() {\n            this._keys = [];\n            this._values = [];\n            this._cacheKey = cacheSentinel;\n            this._cacheIndex = -2;\n          }\n\n          Object.defineProperty(Map.prototype, \"size\", {\n            get: function get() {\n              return this._keys.length;\n            },\n            enumerable: true,\n            configurable: true\n          });\n\n          Map.prototype.has = function (key) {\n            return this._find(key,\n            /*insert*/\n            false) >= 0;\n          };\n\n          Map.prototype.get = function (key) {\n            var index = this._find(key,\n            /*insert*/\n            false);\n\n            return index >= 0 ? this._values[index] : undefined;\n          };\n\n          Map.prototype.set = function (key, value) {\n            var index = this._find(key,\n            /*insert*/\n            true);\n\n            this._values[index] = value;\n            return this;\n          };\n\n          Map.prototype.delete = function (key) {\n            var index = this._find(key,\n            /*insert*/\n            false);\n\n            if (index >= 0) {\n              var size = this._keys.length;\n\n              for (var i = index + 1; i < size; i++) {\n                this._keys[i - 1] = this._keys[i];\n                this._values[i - 1] = this._values[i];\n              }\n\n              this._keys.length--;\n              this._values.length--;\n\n              if (key === this._cacheKey) {\n                this._cacheKey = cacheSentinel;\n                this._cacheIndex = -2;\n              }\n\n              return true;\n            }\n\n            return false;\n          };\n\n          Map.prototype.clear = function () {\n            this._keys.length = 0;\n            this._values.length = 0;\n            this._cacheKey = cacheSentinel;\n            this._cacheIndex = -2;\n          };\n\n          Map.prototype.keys = function () {\n            return new MapIterator(this._keys, this._values, getKey);\n          };\n\n          Map.prototype.values = function () {\n            return new MapIterator(this._keys, this._values, getValue);\n          };\n\n          Map.prototype.entries = function () {\n            return new MapIterator(this._keys, this._values, getEntry);\n          };\n\n          Map.prototype[\"@@iterator\"] = function () {\n            return this.entries();\n          };\n\n          Map.prototype[iteratorSymbol] = function () {\n            return this.entries();\n          };\n\n          Map.prototype._find = function (key, insert) {\n            if (this._cacheKey !== key) {\n              this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n            }\n\n            if (this._cacheIndex < 0 && insert) {\n              this._cacheIndex = this._keys.length;\n\n              this._keys.push(key);\n\n              this._values.push(undefined);\n            }\n\n            return this._cacheIndex;\n          };\n\n          return Map;\n        }()\n      );\n\n      function getKey(key, _) {\n        return key;\n      }\n\n      function getValue(_, value) {\n        return value;\n      }\n\n      function getEntry(key, value) {\n        return [key, value];\n      }\n    } // naive Set shim\n\n\n    function CreateSetPolyfill() {\n      return (\n        /** @class */\n        function () {\n          function Set() {\n            this._map = new _Map();\n          }\n\n          Object.defineProperty(Set.prototype, \"size\", {\n            get: function get() {\n              return this._map.size;\n            },\n            enumerable: true,\n            configurable: true\n          });\n\n          Set.prototype.has = function (value) {\n            return this._map.has(value);\n          };\n\n          Set.prototype.add = function (value) {\n            return this._map.set(value, value), this;\n          };\n\n          Set.prototype.delete = function (value) {\n            return this._map.delete(value);\n          };\n\n          Set.prototype.clear = function () {\n            this._map.clear();\n          };\n\n          Set.prototype.keys = function () {\n            return this._map.keys();\n          };\n\n          Set.prototype.values = function () {\n            return this._map.values();\n          };\n\n          Set.prototype.entries = function () {\n            return this._map.entries();\n          };\n\n          Set.prototype[\"@@iterator\"] = function () {\n            return this.keys();\n          };\n\n          Set.prototype[iteratorSymbol] = function () {\n            return this.keys();\n          };\n\n          return Set;\n        }()\n      );\n    } // naive WeakMap shim\n\n\n    function CreateWeakMapPolyfill() {\n      var UUID_SIZE = 16;\n      var keys = HashMap.create();\n      var rootKey = CreateUniqueKey();\n      return (\n        /** @class */\n        function () {\n          function WeakMap() {\n            this._key = CreateUniqueKey();\n          }\n\n          WeakMap.prototype.has = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? HashMap.has(table, this._key) : false;\n          };\n\n          WeakMap.prototype.get = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? HashMap.get(table, this._key) : undefined;\n          };\n\n          WeakMap.prototype.set = function (target, value) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            true);\n            table[this._key] = value;\n            return this;\n          };\n\n          WeakMap.prototype.delete = function (target) {\n            var table = GetOrCreateWeakMapTable(target,\n            /*create*/\n            false);\n            return table !== undefined ? delete table[this._key] : false;\n          };\n\n          WeakMap.prototype.clear = function () {\n            // NOTE: not a real clear, just makes the previous data unreachable\n            this._key = CreateUniqueKey();\n          };\n\n          return WeakMap;\n        }()\n      );\n\n      function CreateUniqueKey() {\n        var key;\n\n        do {\n          key = \"@@WeakMap@@\" + CreateUUID();\n        } while (HashMap.has(keys, key));\n\n        keys[key] = true;\n        return key;\n      }\n\n      function GetOrCreateWeakMapTable(target, create) {\n        if (!hasOwn.call(target, rootKey)) {\n          if (!create) return undefined;\n          Object.defineProperty(target, rootKey, {\n            value: HashMap.create()\n          });\n        }\n\n        return target[rootKey];\n      }\n\n      function FillRandomBytes(buffer, size) {\n        for (var i = 0; i < size; ++i) {\n          buffer[i] = Math.random() * 0xff | 0;\n        }\n\n        return buffer;\n      }\n\n      function GenRandomBytes(size) {\n        if (typeof Uint8Array === \"function\") {\n          if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size));\n          if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size));\n          return FillRandomBytes(new Uint8Array(size), size);\n        }\n\n        return FillRandomBytes(new Array(size), size);\n      }\n\n      function CreateUUID() {\n        var data = GenRandomBytes(UUID_SIZE); // mark as random - RFC 4122 § 4.4\n\n        data[6] = data[6] & 0x4f | 0x40;\n        data[8] = data[8] & 0xbf | 0x80;\n        var result = \"\";\n\n        for (var offset = 0; offset < UUID_SIZE; ++offset) {\n          var _byte = data[offset];\n          if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\n          if (_byte < 16) result += \"0\";\n          result += _byte.toString(16).toLowerCase();\n        }\n\n        return result;\n      }\n    } // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n\n\n    function MakeDictionary(obj) {\n      obj.__ = undefined;\n      delete obj.__;\n      return obj;\n    }\n  });\n})(Reflect$1 || (Reflect$1 = {}));\n/**\r\n * Keys used with reflect-metadata\r\n */\n\n\nvar REFLECT_KEY;\n\n(function (REFLECT_KEY) {\n  /**\r\n   * Infer a property type\r\n   */\n  REFLECT_KEY[\"TYPE\"] = \"design:type\";\n  /**\r\n   * Concerns json schema\r\n   */\n\n  REFLECT_KEY[\"JSON_SCHEMA\"] = \"tabbouleh:schema\";\n  /**\r\n   * Concerns object properties schema\r\n   */\n\n  REFLECT_KEY[\"JSON_PROPERTY\"] = \"tabbouleh:property\";\n  /**\r\n   * Concerns references\r\n   */\n\n  REFLECT_KEY[\"JSON_REFERENCE\"] = \"tabbouleh:references\";\n})(REFLECT_KEY || (REFLECT_KEY = {}));\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n/**\r\n * Handle all JSONProperty concerns.\r\n */\n\n\nvar PropertyEngine =\n/** @class */\nfunction () {\n  function PropertyEngine() {}\n  /**\r\n   * From a class, return a JSONSchema which may contain only the 'type' associated to this class.\r\n   *\r\n   * @param typeTS\r\n   */\n\n\n  PropertyEngine.getJSONSchemaType = function (typeTS) {\n    switch (typeTS) {\n      case Array:\n        return {\n          type: 'array'\n        };\n\n      case Number:\n        return {\n          type: 'number'\n        };\n\n      case String:\n        return {\n          type: 'string'\n        };\n\n      case Object:\n        return {\n          type: 'object'\n        };\n\n      default:\n        return {\n          type: 'null'\n        };\n    }\n  };\n  /**\r\n   * Return a JSON Schema for a property.\r\n   * Define schema 'type' only if no '$ref' is defined.\r\n   *\r\n   * @param reflectEntity partial schema get by reflection\r\n   * @param paramEntity partial schema given in param\r\n   * @param typeTS reflected type of the property\r\n   */\n\n\n  PropertyEngine.getJSONPropertySchema = function (reflectEntity, paramEntity, typeTS) {\n    var partialEntity = _assign({}, reflectEntity, paramEntity);\n\n    if (partialEntity.$ref) {\n      return partialEntity;\n    }\n\n    var typeEntity = PropertyEngine.getJSONSchemaType(typeTS);\n    return _assign({}, typeEntity, partialEntity);\n  };\n  /**\r\n   * Return by reflection JSON properties (aka JSONSchema.properties) of the JSONSchema.\r\n   *\r\n   * @param prototype prototype of the JSONSchema class\r\n   */\n\n\n  PropertyEngine.getReflectProperties = function (prototype) {\n    return Reflect.getMetadata(REFLECT_KEY.JSON_PROPERTY, prototype) || {};\n  };\n  /**\r\n   * Define by reflection JSON properties (aka JSONSchema.properties) of the JSONSchema.\r\n   *\r\n   * @param prototype prototype of the JSONSchema class\r\n   * @param properties JSONSchema.properties of the JSONSchema\r\n   */\n\n\n  PropertyEngine.setReflectProperties = function (prototype, properties) {\n    Reflect.defineMetadata(REFLECT_KEY.JSON_PROPERTY, properties, prototype);\n  };\n  /**\r\n   * Define JSON schema of the given property.\r\n   *\r\n   * @param prototype prototype of the JSONSchema class\r\n   * @param key property key of the JSONSchema class\r\n   * @param value partial schema given in param\r\n   */\n\n\n  PropertyEngine.defineReflectProperties = function (prototype, key, value) {\n    // get existing properties\n    var properties = PropertyEngine.getReflectProperties(prototype); // get the json schema of the property\n\n    var reflectSchema = Reflect.getMetadata(REFLECT_KEY.JSON_SCHEMA, prototype, key) || {}; // get the infered type of the property\n\n    var typeSchema = Reflect.getMetadata(REFLECT_KEY.TYPE, prototype, key); // construct the final schema\n\n    var fullSchema = PropertyEngine.getJSONPropertySchema(reflectSchema, value, typeSchema); // add the schema to existing properties\n\n    properties[key] = _assign({}, properties[key] || {}, fullSchema);\n    PropertyEngine.setReflectProperties(prototype, properties);\n  };\n\n  return PropertyEngine;\n}();\n\nvar msg = function msg(name) {\n  return \"Class called by Tabbouleh but not decorated with @JSONSchema: \" + name;\n};\n/**\r\n * To throw when an expected JSON Schema class is not (or undefined).\r\n */\n\n\nvar NotAJsonSchemaError =\n/** @class */\nfunction (_super) {\n  __extends(NotAJsonSchemaError, _super);\n  /**\r\n   * @param target the failing target\r\n   */\n\n\n  function NotAJsonSchemaError(target) {\n    var _this = _super.call(this, msg(target && target.name ? target.name : target)) || this;\n\n    Error.call(_this);\n    Error.captureStackTrace(_this, _this.constructor);\n    Object.setPrototypeOf(_this, NotAJsonSchemaError.prototype);\n    return _this;\n  }\n\n  return NotAJsonSchemaError;\n}(Error);\n\nvar Util = {\n  isClass: function isClass(o) {\n    return o && o['name'] && o['prototype'];\n  }\n};\n/**\r\n * Handle all references concerns\r\n */\n\nvar ReferenceEngine =\n/** @class */\nfunction () {\n  function ReferenceEngine() {}\n  /**\r\n   * Apply all references with target as source class.\r\n   *\r\n   * @param target class source\r\n   * @param definitions schema definitions of the root schema\r\n   * @param rootTarget root schema class, if not target\r\n   */\n\n\n  ReferenceEngine.computeJSONReferences = function (target, definitions, rootTarget) {\n    var isRoot = !rootTarget;\n    rootTarget = rootTarget || target;\n\n    if (!definitions) {\n      var rootTargetSchema = SchemaEngine.getReflectSchema(rootTarget) || {};\n      definitions = rootTargetSchema.definitions || {};\n    }\n\n    var refMapClass = ReferenceEngine.getReferences(target.name, target.prototype);\n    refMapClass.forEach(function (a) {\n      var _a;\n\n      var refTarget = a.targetFn();\n\n      if (!Util.isClass(refTarget)) {\n        throw new NotAJsonSchemaError(refTarget);\n      }\n\n      if (refTarget !== rootTarget) {\n        var targetID = ReferenceEngine.generateSchemaID(refTarget);\n\n        if (!definitions[targetID]) {\n          definitions[targetID] = SchemaEngine.getComputedJSONSchema(refTarget, definitions, rootTarget);\n        }\n      }\n\n      var refSchema = {\n        $ref: ReferenceEngine.generateRef(refTarget, rootTarget)\n      };\n      var value = a.jsonPropertyKey ? (_a = {}, _a[a.jsonPropertyKey] = refSchema, _a) : refSchema;\n      PropertyEngine.defineReflectProperties(target.prototype, a.key, value);\n    });\n\n    if (Object.keys(definitions).length && isRoot) {\n      SchemaEngine.defineReflectSchema(rootTarget, {\n        definitions: definitions\n      });\n    }\n  };\n  /**\r\n   * Create and add a reference to the given C class,\r\n   * which target the class returned by classTargetFn.\r\n   *\r\n   * @param prototypeSource prototype of the C class source\r\n   * @param propertyKey property concerned of the C class source\r\n   * @param jsonProperty JSON property key concerned. Or null if concerns all the JSON Schema\r\n   * @param classTargetFn resolver of the class targeted\r\n   */\n\n\n  ReferenceEngine.addReference = function (prototypeSource, propertyKey, jsonProperty, classTargetFn) {\n    var className = prototypeSource.constructor.name;\n    var reference = {\n      className: className,\n      key: propertyKey,\n      jsonPropertyKey: jsonProperty,\n      targetFn: classTargetFn\n    };\n    var referenceMap = ReferenceEngine.getReflectReference(prototypeSource) || {};\n    var refMapClass = referenceMap[className] || []; // if a reference for this key and json key already exist, remove it\n\n    refMapClass = refMapClass.filter(function (a) {\n      return a.key !== reference.key || a.jsonPropertyKey !== reference.jsonPropertyKey;\n    });\n    referenceMap[className] = refMapClass;\n    refMapClass.push(reference);\n    ReferenceEngine.setReflectReference(prototypeSource, referenceMap);\n  };\n  /**\r\n   * For the given class return all its references.\r\n   *\r\n   * @param className\r\n   * @param prototypeSource prototype of the class\r\n   */\n\n\n  ReferenceEngine.getReferences = function (className, prototypeSource) {\n    var referenceMap = ReferenceEngine.getReflectReference(prototypeSource) || {};\n    return referenceMap[className] || [];\n  };\n  /**\r\n   * Generate a '$ref' value for the given target class.\r\n   *\r\n   * @param target\r\n   * @param rootTarget\r\n   */\n\n\n  ReferenceEngine.generateRef = function (target, rootTarget) {\n    if (target === rootTarget) {\n      return '#';\n    }\n\n    return \"#/definitions/\" + ReferenceEngine.generateSchemaID(target);\n  };\n  /**\r\n   * Generate an ID for the given target class.\r\n   *\r\n   * @param target\r\n   */\n\n\n  ReferenceEngine.generateSchemaID = function (target) {\n    return \"_\" + target.name + \"_\";\n  };\n  /**\r\n   * Return the reference map of the given class prototype.\r\n   *\r\n   * @param prototypeTarget prototype of the class\r\n   */\n\n\n  ReferenceEngine.getReflectReference = function (prototypeTarget) {\n    return Reflect.getMetadata(REFLECT_KEY.JSON_REFERENCE, prototypeTarget);\n  };\n  /**\r\n   * Define the reference map of the given class prototype.\r\n   *\r\n   * @param prototypeTarget prototype of the class\r\n   * @param referenceMap\r\n   */\n\n\n  ReferenceEngine.setReflectReference = function (prototypeTarget, referenceMap) {\n    Reflect.defineMetadata(REFLECT_KEY.JSON_REFERENCE, referenceMap, prototypeTarget);\n  };\n\n  return ReferenceEngine;\n}();\n/**\r\n * Handle all JSONSchema class concerns.\r\n */\n\n\nvar SchemaEngine =\n/** @class */\nfunction () {\n  function SchemaEngine() {}\n  /**\r\n   * Return a full JSON Schema from a class, with all properties.\r\n   * Compute all the class references.\r\n   *\r\n   * @param target JSONSchema class\r\n   * @param definitions schema definitions of the root schema\r\n   * @param rootTarget root schema class, if not target\r\n   */\n\n\n  SchemaEngine.getComputedJSONSchema = function (target, definitions, rootTarget) {\n    ReferenceEngine.computeJSONReferences(target, definitions, rootTarget);\n    var schema = SchemaEngine.getReflectSchema(target);\n\n    if (!schema) {\n      throw new NotAJsonSchemaError(target);\n    }\n\n    schema.properties = PropertyEngine.getReflectProperties(target.prototype);\n    return schema;\n  };\n  /**\r\n   * Define by reflection the JSON schema of the given class.\r\n   *\r\n   * @param target JSONSchema class\r\n   * @param value partial schema given in param\r\n   */\n\n\n  SchemaEngine.defineReflectSchema = function (target, value) {\n    var classSchema = // we get the existing schema of the class\n    SchemaEngine.getReflectSchema(target) || // or we create an empty one (object)\n    PropertyEngine.getJSONPropertySchema({}, {}, Object);\n    Object.assign(classSchema, value);\n    SchemaEngine.setReflectSchema(target, classSchema);\n  };\n  /**\r\n   * Return a JSON schema if exist for the given class.\r\n   *\r\n   * @param target JSONSchema class\r\n   */\n\n\n  SchemaEngine.getReflectSchema = function (target) {\n    return Reflect.getMetadata(REFLECT_KEY.JSON_SCHEMA, target.prototype);\n  };\n  /**\r\n   * Define a JSON schema if exist for the given class.\r\n   *\r\n   * @param target JSONSchema class\r\n   * @param schema JSON schema\r\n   */\n\n\n  SchemaEngine.setReflectSchema = function (target, schema) {\n    Reflect.defineMetadata(REFLECT_KEY.JSON_SCHEMA, schema, target.prototype);\n  };\n\n  return SchemaEngine;\n}();\n/**\r\n * Tabbouleh give a valid JSON Schema (draft 7) from a model class\r\n * which has been decorated with properties.\r\n */\n\n\nvar Tabbouleh =\n/** @class */\nfunction () {\n  function Tabbouleh() {}\n  /**\r\n   * From a class, give a JSON Schema (draft 7).\r\n   * The class MUST be a valid JSONSchema entity, decorated.\r\n   */\n\n\n  Tabbouleh.generateJSONSchema = function (target) {\n    return SchemaEngine.getComputedJSONSchema(target);\n  };\n  /**\r\n   * From an object of classes, give an object of JSON Schema (draft 7).\r\n   * The classes MUST be valid JSONSchema entities, decorated.\r\n   * The object returned follow the same mapping as the one given.\r\n   */\n\n\n  Tabbouleh.generateMultipleJSONSchemas = function (target) {\n    var obj = {};\n\n    for (var _i = 0, _a = Object.keys(target); _i < _a.length; _i++) {\n      var k = _a[_i];\n      var c = target[k];\n      obj[k] = Tabbouleh.generateJSONSchema(c);\n    }\n\n    return obj;\n  };\n\n  return Tabbouleh;\n}();\n\nvar compute = function compute(value) {\n  if (value === void 0) {\n    value = {};\n  }\n\n  return function (target) {\n    SchemaEngine.defineReflectSchema(target, value);\n  };\n};\n\nfunction JSONSchema(arg) {\n  // value\n  if (typeof arg === 'object') {\n    return compute(arg);\n  } // target\n\n\n  compute()(arg);\n}\n/**\r\n * Handle decorator actions.\r\n */\n\n\nvar DecoratorEngine =\n/** @class */\nfunction () {\n  function DecoratorEngine() {}\n  /**\r\n   * Add to the class/property json schema the given value, or create the schema if necessary.\r\n   * To use from decorator, which is used as expression or function.\r\n   *\r\n   * @param args depending of the decorator state, a single tuple of J, or DecoratorClassProps\r\n   * @param defaultValues initialValues which may be overridden\r\n   */\n\n\n  DecoratorEngine.defineProperties = function (args, defaultValues) {\n    if (args.length === 1) {\n      var value = args[0];\n      return DecoratorEngine.compute(defaultValues, value);\n    }\n\n    var prototype = args[0];\n    var key = args[1];\n    DecoratorEngine.compute(defaultValues)(prototype, key);\n  };\n  /**\r\n   * Return a decorator function\r\n   * which handle reference mapping and define the class/property json schema.\r\n   *\r\n   * @param defaultValues\r\n   * @param value\r\n   */\n\n\n  DecoratorEngine.compute = function (defaultValues, value) {\n    if (value === void 0) {\n      value = {};\n    }\n\n    value = _assign({}, defaultValues, value);\n    return function (prototype, key, descriptor) {\n      var valueSchema = {}; // If we found ClassResolver, we create reference for each of them\n\n      Object.keys(value).forEach(function (_k) {\n        var k = _k;\n        var v = value[k];\n\n        if (typeof v === 'function') {\n          ReferenceEngine.addReference(prototype, key, k, v);\n        } else {\n          valueSchema[k] = v;\n        }\n      });\n      PropertyEngine.defineReflectProperties(prototype, key, valueSchema);\n    };\n  };\n\n  return DecoratorEngine;\n}();\n\nfunction JSONProperty() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return DecoratorEngine.defineProperties(args, {});\n}\n\nfunction JSONBoolean() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return DecoratorEngine.defineProperties(args, {\n    type: 'boolean'\n  });\n}\n\nfunction JSONString() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return DecoratorEngine.defineProperties(args, {\n    type: 'string'\n  });\n}\n\nfunction JSONNumber() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return DecoratorEngine.defineProperties(args, {\n    type: 'number'\n  });\n}\n\nfunction JSONInteger() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return DecoratorEngine.defineProperties(args, {\n    type: 'integer'\n  });\n}\n\nfunction JSONObject() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  } // Related class\n\n\n  if (args.length === 1 && typeof args[0] === 'function') {\n    return function (prototype, key, descriptor) {\n      var classFn = args[0];\n      ReferenceEngine.addReference(prototype, key, null, classFn);\n    };\n  }\n\n  return DecoratorEngine.defineProperties(args, {\n    type: 'object'\n  });\n}\n/**\r\n * Decorator for JSON array attribute.\r\n */\n\n\nfunction JSONArray(value) {\n  // Related class\n  if (typeof value === 'function') {\n    return function (prototype, key, descriptor) {\n      ReferenceEngine.addReference(prototype, key, 'items', value);\n    };\n  } // Given type\n\n\n  if (typeof value === 'string') {\n    return function (prototype, key, descriptor) {\n      DecoratorEngine.defineProperties([prototype, key, descriptor], {\n        type: 'array',\n        items: {\n          type: value\n        }\n      });\n    };\n  }\n\n  return DecoratorEngine.defineProperties([value], {\n    type: 'array'\n  });\n}\n\nexport default Tabbouleh;\nexport { JSONArray, JSONBoolean, JSONInteger, JSONNumber, JSONObject, JSONProperty, JSONSchema, JSONString, NotAJsonSchemaError };","import React from 'react';\nimport './App.css';\nimport Form from \"react-jsonschema-form\";\nimport { JSONSchema7, JSONSchema6 } from 'json-schema';\n\ninterface AppProps {\n    schema: JSONSchema7;\n}\n\nconst App: React.FC<AppProps> = ({schema}) => {\n  return (\n      <div id={'container-h'}>\n\n          <Form id={'data-input'}\n              schema={schema as JSONSchema6}\n                onChange={d => console.log('change', d)}\n                onSubmit={d => console.log('submit', d)}\n                onError={d => console.log('error', d)} />\n\n          <pre id=\"schema-output\">\n              {JSON.stringify(schema, undefined, '\\t')}\n          </pre>\n\n      </div>\n  );\n};\n\nexport default App;\n","import {JSONSchema, JSONString} from \"tabbouleh\";\r\n\r\n@JSONSchema<UserAddress>({\r\n    required: ['street', 'city']\r\n})\r\nexport class UserAddress {\r\n\r\n    @JSONString\r\n    street: string;\r\n\r\n    @JSONString\r\n    city: string;\r\n\r\n}","import {UserAddress} from \"./UserAddress\";\r\nimport {JSONInteger, JSONObject, JSONSchema, JSONString} from \"tabbouleh\";\r\n\r\n@JSONSchema<UserData>({\r\n    title: 'User form',\r\n    description: 'All the user data',\r\n    required: ['name', 'age', 'address']\r\n})\r\nexport class UserData {\r\n\r\n    @JSONString({\r\n        title: 'lastname',\r\n        minLength: 3\r\n    })\r\n    name: string;\r\n\r\n    @JSONInteger({\r\n        minimum: 0\r\n    })\r\n    age: number;\r\n\r\n    @JSONObject(() => UserAddress)\r\n    address: UserAddress;\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Tabbouleh from \"tabbouleh\";\nimport {UserData} from \"./UserData\";\n\n// generate the UserData schema\nconst schema = Tabbouleh.generateJSONSchema(UserData);\nconsole.log('schema:', schema);\n\nReactDOM.render(<App\n    schema={schema}\n/>, document.getElementById('root'));\n\n"],"sourceRoot":""}